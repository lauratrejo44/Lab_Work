housing <- read.csv("~/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/landdata-states.csv")
head(housing[1:5])
housing
hist(housing$Home.Value)
p1 +geom_point(aes(size = 2), (color="red") # this is fine -- all points red
p1 + geom_point(aes(color=Home.Value, shape = region))
dat <- read.csv(""~/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/EconomistData.csv")
dat <- read.csv("~/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/EconomistData.csv")
head(dat)
head(dat)
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point()
library(ggplot2)
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point()
args(geom_histogram)
args(stat_bin)
p2 <- ggplot(housing, aes(x = Home.Value))
p2 + geom_histogram()
p2 + geom_histogram(stat = "bin", binwidth=4000)
housing.sum <- aggregate(housing["Home.Value"], housing["State"], FUN=mean)
rbind(head(housing.sum), tail(housing.sum))
ggplot(housing.sum, aes(x=State, y=Home.Value)) + geom_bar()
ggplot(housing.sum, aes(x=State, y=Home.Value)) + geom_bar(stat="identity")
p3 <- ggplot(housing,aes(x = State,y = Home.Price.Index)) + theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),alpha = 0.5,size = 1.5,position = position_jitter(width = 0.25, height = 0)))
p4 + scale_x_discrete(name="State Abbreviation") + scale_color_continuous(name="",breaks = c(1976, 1994, 2013),labels = c("'76", "'94", "'13"))
dat <- read.csv("/home/eeb177-student/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/EconomistData.csv")
head(dat)
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point()
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point(aes(size = 2), color = "blue")
head(dat)
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point(aes(size = 2), color = "blue") + geom_point(aes(color = Region, size = HDI.Rank))
dat <- read.csv("/home/eeb177-student/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/EconomistData.csv")
head(dat)
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank))
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point()
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth()
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point()
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point(aes(size = 2), color = "blue") + geom_point(aes(color = Region, size = HDI.Rank))
?stat_smooth
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth()
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth(method = "lm")
?loess
?stat_smooth
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth(stat = "line" )
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth(geom = "line" )
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth(geom = "line")
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth()
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_line(stat = "smooth")
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_line(stat = "smooth")
?stat_line
??stat_line
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth(stat = "line")
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth(geom = "line")
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point() + geom_smooth(span = .2)
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + + geom_point(aes(color = Region))
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point(aes(color = Region))
housing <- read.csv("~/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/landdata-states.csv")
housing <- read.csv("~/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/landdata-states.csv")
head(housing[1:5])
hist(housing$Home.Value)
library(ggplot2)
ggplot(housing, aes(x = Home.Value)) +geom_histogram()
plot(Home.Value ~ Date, data=subset(housing, State == "MA"))
points(Home.Value ~ Date, col="red",data=subset(housing, State == "TX"))
legend(1975, 400000, c("MA", "TX"), title="State",col=c("black","red"),pch=c(1, 1))
ggplot(housing, aes(x = Home.Value)) + geom_histogram()
ggplot(subset(housing, State %in% c("MA", "TX")),aes(x=Date,y=Home.Value,color=State))+geom_point()
plot(Home.Value ~ Date, data=subset(housing, State == "MA"))
p2 <- ggplot(housing, aes(x = Home.Value))
#Example Data: Housing Prices
housing <- read.csv("~/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/landdata-states.csv")
head(housing[1:5])
#base histogram
hist(housing$Home.Value)
#gg histogram
library(ggplot2)
ggplot(housing, aes(x = Home.Value)) + geom_histogram()
#base scatterplot with color
plot(Home.Value ~ Date, data=subset(housing, State == "MA"))
points(Home.Value ~ Date, col="red",data=subset(housing, State == "TX"))
legend(1975, 400000, c("MA", "TX"), title="State",col=c("black","red"),pch=c(1, 1))
#gg scatter w/color
ggplot(subset(housing, State %in% c("MA", "TX")),aes(x=Date,y=Home.Value,color=State))+geom_point()
#gg scatter with geo
hp2001Q1 <- subset(housing, Date == 2001.25)
ggplot(hp2001Q1,aes(y = Structure.Cost, x = Land.Value)) +geom_point()
#log
ggplot(hp2001Q1,aes(y = Structure.Cost, x = log(Land.Value))) +geom_point()
#regression line
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 + geom_point(aes(color = Home.Value)) + geom_line(aes(y = pred.SC))
#smoother
p1 + geom_point(aes(color = Home.Value)) +geom_smooth()
#label points
p1 + geom_text(aes(label=State), size = 3)
#greppel
install.packages("ggrepel")
library("ggrepel")
p1 + geom_point() + geom_text_repel(aes(label=State), size = 3)
#variables mapped to aes
p1 +geom_point (aes(size = 2), (color="red")) # this is fine -- all points red
p1 + geom_point (aes(size = 2), color="red") # this is fine -- all points red
#Example Data: Housing Prices
housing <- read.csv("~/Desktop/eeb-177/lab_hw/Rgraphics/dataSets/landdata-states.csv")
head(housing[1:5])
#base histogram
hist(housing$Home.Value)
#gg histogram
library(ggplot2)
ggplot(housing, aes(x = Home.Value)) + geom_histogram()
#base scatterplot with color
plot(Home.Value ~ Date, data=subset(housing, State == "MA"))
points(Home.Value ~ Date, col="red",data=subset(housing, State == "TX"))
legend(1975, 400000, c("MA", "TX"), title="State",col=c("black","red"),pch=c(1, 1))
#gg scatter w/color
ggplot(subset(housing, State %in% c("MA", "TX")),aes(x=Date,y=Home.Value,color=State))+geom_point()
#gg scatter with geo
hp2001Q1 <- subset(housing, Date == 2001.25)
ggplot(hp2001Q1,aes(y = Structure.Cost, x = Land.Value)) +geom_point()
#log
ggplot(hp2001Q1,aes(y = Structure.Cost, x = log(Land.Value))) +geom_point()
#regression line
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 + geom_point(aes(color = Home.Value)) + geom_line(aes(y = pred.SC))
#smoother
p1 + geom_point(aes(color = Home.Value)) +geom_smooth()
#label points
p1 + geom_text(aes(label=State), size = 3)
#greppel
install.packages("ggrepel")
library("ggrepel")
p1 + geom_point() + geom_text_repel(aes(label=State), size = 3)
#variables mapped to aes
p1 + geom_point (aes(size = 2), color="red") # this is fine -- all points red
#Mapping Variables to other Aesthetics
p1 + geom_point(aes(color=Home.Value, shape = region))
#Statistical Transformations
#default statistic
args(geom_histogram)
args(stat_bin)
#default histogram for Home.Value
p2 <- ggplot(housing, aes(x = Home.Value))
p2 + geom_histogram()
#change binwidth
p2 + geom_histogram(stat = "bin", binwidth=4000)
housing.sum <- aggregate(housing["Home.Value"], housing["State"], FUN=mean)
rbind(head(housing.sum), tail(housing.sum))
ggplot(housing.sum, aes(x=State, y=Home.Value)) + geom_bar()
install.packages("ggrepel")
p2 + geom_histogram (stat = "bin", binwidth=4000)
args(geom_histogram)
args(stat_bin)
p2 + geom_histogram (stat = "bin", binwidth=4000)
args(geom_histogram)
library(tidyr)
home.land.byyear <- gather(housing.byyear, value = "value", key = "type", Home.Value, Land.Value)
